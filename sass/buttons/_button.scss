// @author    : Adarsh Pastakia
// @version   : 5.0.0
// @copyright : 2018
// @license   : MIT

.ui-btn {
  $btn-shadow: 0 0 0 1px rgba($shadow, 0.2), 0 1px 1px rgba($shadow, 0.2);
  $btn-hover-shadow: inset 0 0 1px rgba($shadow, 0.2);
  $btn-active-shadow: inset 0 1px 2px rgba($shadow, 0.2);
  $btn-gloss: linear-gradient(180deg, rgba(#ffffff, 0.1), rgba(#ffffff, 0));

  $btn-bg: mix($base-theme, $base-invert, 99%);
  $btn-color: mix($btn-bg, $base-color, 15%);

  align-items: center;
  display: grid;
  grid-template-areas: "icon label badge caret";
  grid-template-columns: auto auto auto auto auto;
  justify-content: center;
  pointer-events: all;
  position: relative;

  .ui-badge {
    align-self: center;
    grid-area: badge;
  }

  $base: #{&};

  &:hover {
    background-color: mix($btn-bg, $white, 85%);
    box-shadow: $btn-hover-shadow;
  }

  &[data-active="true"],
  &[data-open="true"],
  &:active {
    background-color: mix($btn-bg, $black, 85%);
    box-shadow: $btn-active-shadow;
  }

  &::before {
    background-image: $btn-gloss;
    content: "";
    pointer-events: none;
    z-index: 2;
    @include position(absolute, 0);
  }

  &__inner {
    background-color: $btn-bg;
    border-radius: $base-border-radius;
    box-shadow: $btn-shadow;
    color: $btn-color;
    display: grid;
    grid-template-areas: "button divider caret";
    grid-template-columns: 1fr auto auto;
    height: 100%;
    overflow: hidden;
  }

  &__wrapper {
    --btn-ripple: #{$btn-color};

    display: inline-block;
    margin: 2px;
    max-width: 12em;
    pointer-events: none;
    position: relative;
    vertical-align: middle;

    &[data-active="true"] {
      #{$base} {
        pointer-events: none;
      }
    }

    &[data-busy="true"] {
      #{$base} {
        pointer-events: none;

        &__inner {
          cursor: wait;
          pointer-events: all;
        }
      }
    }

    @at-root #{$base}__group,
      & {
      &[data-disabled="true"] {
        background-color: rgba(0, 0, 0, 0.05);

        #{$base} {
          pointer-events: none;

          &__inner {
            box-shadow: none;
            cursor: not-allowed;
            opacity: 0.5;
            pointer-events: all;
          }
        }
      }

      &[data-size="sm"] #{$base}__inner {
        font-size: map-get($font-sizes, sm);
      }

      &[data-size="md"] #{$base}__inner {
        font-size: map-get($font-sizes, md);
      }

      &[data-size="lg"] #{$base}__inner {
        font-size: map-get($font-sizes, lg);
      }
    }

    &[data-type="outline"] {
      #{$base} {
        &__inner {
          box-shadow: 0 0 0 1px rgba($btn-color, 0.75), 0 1px 1px rgba($btn-color, 0.25);
        }
      }
    }

    &[data-type="solid"] {
      --btn-ripple: #{$white};
      #{$base} {
        &:hover {
          background-color: mix($btn-color, $white, 85%);
        }

        &[data-active="true"],
        &[data-open="true"],
        &:active {
          background-color: mix($btn-color, $black, 85%);
        }
        &__inner {
          background-color: $btn-color;
          color: $btn-bg;
        }
      }
      &#{$base}__icon--hilight #{$base}__icon {
        background-color: mix($btn-color, $black, 30%);
        color: $white;
      }

      #{$base}__divider {
        background-color: rgba($white, 0.2);
      }
    }

    &[data-type="tool"] {
      #{$base}__inner {
        background-color: transparent;
        border-color: transparent;
        box-shadow: 0 0 0 1px rgba($base-invert, 0.025);
      }

      #{$base}::before {
        background-image: none;
      }

      #{$base}:hover {
        background-color: rgba(mix($gray, $base-theme, 30%), 0.25);
      }

      &.ui-theme--inverse #{$base}__inner {
        color: $gray-light;
      }
    }
  }

  &__icon,
  &__caret {
    line-height: 0.75;
    padding: 0.25em;

    .ui-icon {
      font-size: 1.5em;
    }
  }

  .ui-svg-icon {
    font-size: 1.5em;
  }

  &__icon {
    grid-area: icon;
  }

  &__label {
    font-weight: $font-weight-medium;
    grid-area: label;
    line-height: 2;
    text-align: center;
    @include ellipsis();

    &:empty {
      display: none;
    }

    &:first-child {
      @include property-prefix(padding-start, 0.5em);
    }

    &:last-child {
      @include property-prefix(padding-end, 0.5em);
    }
  }

  &__caret {
    grid-area: caret;
  }

  &__split {
    grid-area: caret;
  }

  &__caret--hide &__caret {
    display: none;
  }

  &--block {
    max-width: none;
    width: 100%;
  }

  &__icon--end & {
    grid-template-areas: "label badge caret icon";

    &__label {
      padding: 0;

      &:first-child {
        @include property-prefix(padding-end, 0.5em);
      }

      &:last-child {
        @include property-prefix(padding-start, 0.5em);
      }
    }
  }
  &__icon--hilight & {
    &__icon {
      background-color: $btn-color;
      color: $btn-bg;
    }
    &__label {
      padding: 0 0.5em;
    }
  }
  &__icon--top & {
    grid-template-areas: "icon icon caret" "label badge caret";

    &__icon {
      justify-self: stretch;
      margin: 0;
      text-align: center;
    }

    &__label {
      @include property-prefix(padding-start, 1em, padding-left);

      &:last-child {
        @include property-prefix(padding-end, 1em, padding-right);
      }
    }
  }

  &__divider {
    background-color: rgba($black, 0.2);
    grid-area: divider;
    margin: 4px 0;
    width: 1px;
  }

  // Ripple effect
  @if ($button-ripple) {
    &::after {
      @include position(absolute, 0);
      background: radial-gradient(circle, var(--btn-ripple) 1%, transparent 1%) center;
      background-position: center;
      background-repeat: no-repeat;
      background-size: 10000% 10000%;
      content: "";
      opacity: 0;
      transition: background-size 0.4s, opacity 0.2s 0.2s;
      z-index: 5;
    }
    &:active::after {
      background-size: 0 0;
      content: "";
      opacity: 0.3;
      transition: background-size 0s, opacity 0s 0s;
    }
  }

  @mixin make-button($theme, $theme-color) {
    &__wrapper.ui-theme--#{$theme} {
      #{$base}__inner {
        color: $theme-color;
      }
      &[data-type="outline"] {
        #{$base}__inner {
          box-shadow: 0 0 0 1px rgba($theme-color, 0.75), 0 1px 1px rgba($theme-color, 0.5);
        }
      }

      &[data-type="solid"] {
        #{$base} {
          &:hover {
            background-color: mix($theme-color, $white, 85%);
          }

          &[data-active="true"],
          &[data-open="true"],
          &:active {
            background-color: mix($theme-color, $black, 85%);
          }
          &__inner {
            background-color: $theme-color;
            color: $white;
          }
        }
        &#{$base}__icon--hilight #{$base}__icon {
          background-color: mix($theme-color, $black, 50%);
          color: $white;
        }
      }

      &#{$base}__icon--hilight #{$base}__icon {
        background-color: mix($theme-color, $black, 90%);
      }
    }
  }

  @each $label, $color in $base-colors {
    @include make-button($label, $color);
  }
}
