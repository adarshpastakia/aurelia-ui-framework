// @author    : Adarsh Pastakia
// @version   : 5.0.0
// @copyright : 2019
// @license   : MIT

.ui-option {
  display: inline-block;

  &__group {
    align-items: center;
    display: grid;
    grid-auto-rows: 2rem;
    grid-column: 1;
    grid-column-gap: 4px;
    grid-template-columns: repeat(auto-fill, minmax(10rem, 1fr));
    justify-items: start;
  }

  &__toggle {
    background-color: $toggle-bg;
    border-radius: 1em;
    box-shadow: $shadow-level1 inset;
    cursor: pointer;
    direction: ltr;
    font-size: 1rem;
    margin: 0 4px;
    opacity: 0.9;
    overflow: hidden;
    position: relative;
    width: 2em;
    --toggle-on: "\00A0\2758";
    --toggle-off: "O";

    &::before {
      color: $toggle-color;
      content: var(--toggle-off);
      display: block;
      font-size: 0.8em;
      line-height: 1;
      margin: auto;
      padding: 2px;
      position: absolute;
      text-align: right;
      width: 100%;
    }

    &::after {
      background-color: $base-theme;
      border-radius: 1em;
      box-shadow: 0 0 1px 0 $gray inset;
      content: "";
      display: block;
      height: calc(1em - 2px);
      left: 0;
      margin: 1px;
      position: relative;
      transition: left 0.2s;
      width: calc(1em - 2px);
    }
  }

  &__control {
    align-items: center;
    display: grid;
    grid-column-gap: 2px;
    grid-template-columns: auto 1fr;
    position: relative;

    > span {
      color: inherit;
      font-size: 0.95em;
      line-height: 1.5rem;
      white-space: nowrap;
      @include ellipsis();

      &:empty {
        display: none;
      }
    }

    > .ui-icon {
      font-size: 1.25rem;
    }

    > input {
      @include position(absolute, 0);
      cursor: pointer;
      opacity: 0;
      z-index: 2;

      ~ .ui-icon:first-of-type {
        display: block;
      }
      ~ .ui-icon:last-of-type {
        display: none;
      }

      &:focus ~ .ui-option__toggle {
        border-radius: 1em;
        box-shadow: 0 0 3px 2px $input-focus-color;
        overflow: hidden;
      }

      &:checked {
        ~ .ui-icon:first-of-type {
          display: none;
        }
        ~ .ui-icon:last-of-type {
          display: block;
        }

        ~ .ui-option__toggle {
          background-color: $toggle-on-bg;
          &::before {
            color: $toggle-on-color;
            content: var(--toggle-on);
            text-align: left;
          }
          &::after {
            left: calc(100% - 1em);
          }
        }
      }

      &:hover ~ .ui-icon,
      &:focus ~ .ui-icon {
        color: $input-focus-color;
      }
    }
  }

  &[data-disabled="true"] {
    cursor: not-allowed;

    label {
      opacity: 0.4;
      pointer-events: none;
    }
  }

  @mixin make-toggle($theme, $theme-color) {
    &.ui-theme--#{$theme} {
      input:checked {
        ~ .ui-option__toggle {
          &::before {
            background-color: $theme-color;
            color: $white;
          }
        }
      }
    }
  }

  @each $label, $color in $base-colors {
    @include make-toggle($label, $color);
  }

  @each $label, $color in $color-list {
    @include make-toggle($label, $color);
  }
}
