export declare class UIDataModel {
    readonly isDirty: boolean;
    readonly dirtyProps: AnyObject;
    static serializeObject(o: any): {};
    static serializeProperty(p: AnyObject): {};
    id: any;
    busy: boolean;
    logger: any;
    protected apiSlug: any;
    protected idProperty: string;
    private metadata;
    private httpClient;
    private loaded;
    private internalId;
    constructor(id?: any);
    get(id: any): Promise<void>;
    save(): Promise<void>;
    delete(): Promise<void>;
    update(): void;
    reset(): void;
    discard(): void;
    addObserver(ob: any): void;
    observe(property: any, callback: any): void;
    dispose(): void;
    serialize(): {};
    deserialize(json: any): void;
    preGet(): void;
    preSave(): void;
    preDelete(): void;
    postGet(_: AnyObject): void;
    postSave(_: AnyObject): void;
    postDelete(_: AnyObject): void;
    protected propertyGetter(prop: any): () => any;
    protected propertySetter(prop: any): (v: any) => any;
    private generateId;
    private updateDirty;
    private callPreHook;
    private doGet;
    private doPost;
    private doPut;
    private doDelete;
}
export declare function serializable(defaultValue?: any): AnyObject;
