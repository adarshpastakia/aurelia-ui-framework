{"version":3,"file":"ui-data-panels.js","sources":["../../src/models/ui-tree-model.ts","../../src/data/tree-node.ts","../../src/data/ui-tree-panel.ts","../../src/data/ui-data-panels.ts"],"sourcesContent":["/**\n * @author    : Adarsh Pastakia\n * @version   : 5.0.0\n * @copyright : 2019\n * @license   : MIT\n */\n\nimport { computedFrom } from \"aurelia-framework\";\n\nlet NODE_ID = 0;\n\nexport class UITreeModel {\n  public children: UITreeNode[] = [];\n  public nodes: UITreeNode[] = [];\n\n  constructor(children: KeyValue[], private maxNodes = 0) {\n    this.children = children.map(child => new UITreeNode(child));\n    this.nodes = this.getExpandedTree(this.children.sortBy(\"label\"));\n  }\n\n  public filter(query: string) {\n    const filtered = this.filterNodes(this.children, query);\n    this.nodes = this.getExpandedTree(filtered.sortBy(\"label\"));\n  }\n\n  public toggleExpand(index: number): void {\n    const node = this.nodes[index] as UITreeNode;\n    node.expanded = !node.expanded;\n\n    if (node.expanded) {\n      let injectedChildren = node.children.sortBy(\"label\");\n      if (injectedChildren.length === 0) {\n        injectedChildren.push(new UITreeNode({ id: \"node-empty\", leaf: true }, node));\n      }\n      if (this.maxNodes > 0 && injectedChildren.length > this.maxNodes) {\n        injectedChildren = [\n          ...injectedChildren.slice(0, this.maxNodes),\n          new UITreeNode({ id: \"node-more\", leaf: true }, node)\n        ];\n      }\n      this.nodes = [\n        ...this.nodes.slice(0, index + 1),\n        ...injectedChildren,\n        ...this.nodes.slice(index + 1)\n      ];\n    } else {\n      let lastIndex = this.nodes.lastIndex(node.id, \"parentId\");\n      while (this.nodes[lastIndex].expanded) {\n        lastIndex = this.nodes.lastIndex(this.nodes[lastIndex].id, \"parentId\");\n      }\n      this.nodes = [...this.nodes.slice(0, index + 1), ...this.nodes.slice(lastIndex + 1)];\n    }\n  }\n\n  public toggleMore(index: number): void {\n    const node = this.nodes[index] as UITreeNode;\n    node.showingMore = !node.showingMore;\n\n    const parentIndex = this.nodes.index(node.parentId, \"id\");\n    let injectedChildren = this.nodes[parentIndex].children.sortBy(\"label\");\n    if (!node.showingMore) {\n      if (injectedChildren.length === 0) {\n        injectedChildren.push(new UITreeNode({ id: \"node-empty\", leaf: true }, node));\n      }\n      if (this.maxNodes > 0 && injectedChildren.length > this.maxNodes) {\n        injectedChildren = [...injectedChildren.slice(0, this.maxNodes)];\n      }\n    }\n    this.nodes = [\n      ...this.nodes.slice(0, parentIndex + 1),\n      ...injectedChildren,\n      this.nodes[index],\n      ...this.nodes.slice(index + 1)\n    ];\n  }\n\n  public getChecked(): UITreeNode[] {\n    const checked = [];\n    this.getCheckedNodes(this.children, checked);\n    return checked;\n  }\n\n  private getCheckedNodes(nodes, checked) {\n    nodes.forEach(node => {\n      if (node.checked === 1) {\n        checked.push(node);\n      }\n      if (node.children) {\n        this.getCheckedNodes(node.childNodes, checked);\n      }\n    });\n  }\n\n  private getExpandedTree(children) {\n    const nodes = [];\n    children.forEach(child => {\n      nodes.push(child);\n      if (child.expanded) {\n        let injectedChildren = child.children.sortBy(\"label\");\n        if (injectedChildren.length === 0) {\n          injectedChildren.push(new UITreeNode({ id: \"node-empty\", leaf: true }, child));\n        }\n        if (this.maxNodes > 0 && injectedChildren.length > this.maxNodes) {\n          injectedChildren = [\n            ...injectedChildren.slice(0, this.maxNodes),\n            new UITreeNode({ id: \"node-more\", leaf: true }, child)\n          ];\n        }\n        nodes.push(...this.getExpandedTree(injectedChildren));\n      }\n    });\n    return nodes;\n  }\n\n  private filterNodes(nodes, query) {\n    return nodes.filter(child => {\n      let retVal =\n        !query ||\n        child.label\n          .ascii()\n          .toLocaleLowerCase()\n          .includes(query.ascii().toLocaleLowerCase());\n      if (!child.leaf) {\n        child.filtered = this.filterNodes(child.childNodes, query);\n        retVal = retVal || child.filtered.length > 0;\n      }\n      return retVal;\n    });\n  }\n}\n\n// tslint:disable-next-line\nexport class UITreeNode {\n  @computedFrom(\"leaf\", \"icon\", \"expanded\", \"iconOpen\", \"iconClosed\")\n  get nodeIcon() {\n    return (this.leaf ? this.icon : this.expanded ? this.iconOpen : this.iconClosed) || this.icon;\n  }\n\n  @computedFrom(\"checked\")\n  get checkIcon() {\n    return this.checked === 2\n      ? \"tree-check-half\"\n      : this.checked\n      ? \"tree-check-on\"\n      : \"tree-check-off\";\n  }\n\n  @computedFrom(\"expanded\")\n  get expandIcon() {\n    return this.expanded ? \"tree-collapse\" : \"tree-expand\";\n  }\n\n  public id: string;\n  public icon: string;\n  public label: string;\n  public model: KeyValue;\n\n  public iconOpen: string;\n  public iconClosed: string;\n\n  public childNodes: UITreeNode[] = [];\n  public filtered: UITreeNode[] = null;\n\n  public leaf: boolean;\n  public parentId: string;\n  public level: number = 0;\n  public checked: number = 0;\n  public expanded: boolean;\n  public selected: boolean;\n  public disabled: boolean;\n  public showingMore: boolean;\n\n  constructor(node: KeyValue, private parent?: UITreeNode) {\n    this.id = node.id || `node__${NODE_ID++}`;\n    this.label = node.label;\n    this.model = node.model;\n\n    this.icon = node.icon;\n    this.iconOpen = node.iconOpen;\n    this.iconClosed = node.iconClosed;\n\n    this.leaf = !!node.leaf;\n    this.expanded = node.expanded;\n    this.disabled = node.disabled;\n\n    if (parent) {\n      this.level = parent.level + 1;\n      this.parentId = parent.id;\n    }\n\n    if (node.children) {\n      this.childNodes = node.children.map(child => new UITreeNode(child, this));\n    }\n  }\n\n  get children() {\n    return this.filtered || this.childNodes;\n  }\n\n  public toggleCheck() {\n    this.checked = this.checked ? 0 : 1;\n    this.children.forEach((c: UITreeNode) => {\n      c.updateChild(\"checked\", this.checked);\n    });\n    if (this.parent && this.parent.updatePartial) {\n      this.parent.updatePartial();\n    }\n  }\n\n  private updatePartial() {\n    const allChecked = this.children.every(node => node.checked === 1);\n    const allUnchecked = this.children.every(node => node.checked === 0);\n\n    this.checked = allChecked ? 1 : allUnchecked ? 0 : 2;\n    if (this.parent && this.parent.updatePartial) {\n      this.parent.updatePartial();\n    }\n  }\n\n  private updateChild(prop, v) {\n    this[prop] = v;\n    this.children.forEach((c: UITreeNode) => {\n      c.updateChild(prop, v);\n    });\n  }\n}\n","/**\n * @author    : Adarsh Pastakia\n * @version   : 5.0.0\n * @copyright : 2019\n * @license   : MIT\n */\nimport { bindable, computedFrom, inlineView } from \"aurelia-framework\";\nimport { UITreeNode } from \"../models/ui-tree-model\";\nimport view from \"./tree-node.html\";\nimport { UITreePanel } from \"./ui-tree-panel\";\n\n@inlineView(view)\nexport class TreeNode {\n  @bindable()\n  public node: UITreeNode;\n  @bindable()\n  public index: number;\n  @bindable()\n  protected tree: UITreePanel;\n\n  @computedFrom(\"tree.value\", \"node.id\")\n  get isSelected(): boolean {\n    return this.tree.value === this.node.id;\n  }\n}\n","/**\n * @author    : Adarsh Pastakia\n * @version   : 5.0.0\n * @copyright : 2019\n * @license   : MIT\n */\nimport { bindable, bindingMode, customElement, inlineView, viewResources } from \"aurelia-framework\";\nimport { UITreeModel, UITreeNode } from \"../models/ui-tree-model\";\nimport { UIInternal } from \"../utils/ui-internal\";\nimport { TreeNode } from \"./tree-node\";\n\n@customElement(\"ui-tree-panel\")\n@viewResources(TreeNode)\n@inlineView(`<template class=\"ui-tree__panel\"><ui-field nolabel class=\"ui-tree__search\" if.bind=\"searchable\">\n  <ui-input type=\"search\" placeholder=\"\\${labelSearch}\" value.bind=\"searchText\" \n  clear.trigger=\"searchTextChanged()\" input.trigger=\"searchTextChanged(searchText) & debounce:200\">\n    <ui-input-addon class=\"ui-text-muted\"><ui-icon icon=\"mdi mdi-magnify\"></ui-icon></ui-input-addon></ui-input></ui-field>\n  <div class=\"ui-tree__container\" nodeclick.delegate=\"itemClicked($event.detail)\" nodeover.delegate=\"itemOver($event.detail)\" nodeout.delegate=\"itemOut($event.detail)\">\n    <tree-node virtual-repeat.for=\"child of rootNode.nodes\" node.bind=\"child\" tree.bind=\"$parent\" index.bind=\"$index\"></tree-node>\n  </div></template>`)\nexport class UITreePanel {\n  @bindable({ defaultBindingMode: bindingMode.twoWay })\n  public value: AnyObject = undefined;\n  @bindable({ defaultBindingMode: bindingMode.twoWay })\n  public model: AnyObject = undefined;\n\n  @bindable()\n  public dataSource: KeyValue[];\n\n  @bindable()\n  public labelSearch: string = \"Search...\";\n  @bindable()\n  public labelEmpty: string = \"No Items\";\n  @bindable()\n  public labelLess: string = \"Show Less...\";\n  @bindable()\n  public labelMore: string = \"Show More...\";\n\n  @bindable()\n  public maxNodes: number;\n  @bindable()\n  public checkable: boolean | number = false;\n  @bindable()\n  public searchable: boolean = false;\n\n  private rootNode: UITreeModel;\n\n  constructor(protected element: Element) {\n    this.checkable = element.hasAttribute(\"checkable\");\n    this.searchable = element.hasAttribute(\"searchable\");\n  }\n\n  public select(node: UITreeNode) {\n    if (this.checkable !== false) {\n      if (node.level >= this.checkable) {\n        node.toggleCheck();\n        this.getCheckedValues();\n        this.element.dispatchEvent(UIInternal.createEvent(\"checked\", this.value));\n      }\n    } else {\n      return UIInternal.fireCallbackEvent(this, \"beforeselect\").then(b =>\n        b ? this.changeSelection(node) : false\n      );\n    }\n  }\n\n  protected bind(): void {\n    this.rootNode = new UITreeModel(this.dataSource, this.maxNodes);\n  }\n\n  protected dataSourceChanged(): void {\n    this.rootNode = new UITreeModel(this.dataSource, this.maxNodes);\n  }\n\n  protected toggleExpand(index): void {\n    this.rootNode.toggleExpand(index);\n  }\n\n  protected toggleMore(index): void {\n    this.rootNode.toggleMore(index);\n  }\n\n  protected toggleCheck(node): void {\n    node.toggleCheck();\n    this.getCheckedValues();\n    this.element.dispatchEvent(UIInternal.createEvent(\"checked\", this.value));\n  }\n\n  protected getCheckedValues() {\n    this.value = [];\n    this.model = [];\n    this.rootNode.getChecked().forEach(checkedNode => {\n      if (checkedNode.level >= this.checkable) {\n        this.value.push(checkedNode.id);\n        this.model.push(checkedNode.model);\n      }\n    });\n  }\n\n  protected searchTextChanged(query) {\n    this.rootNode.filter(query);\n  }\n\n  private changeSelection(node) {\n    this.value = node.id;\n    this.model = node.model;\n    this.element.dispatchEvent(UIInternal.createEvent(\"select\", this.value));\n  }\n}\n","/**\n * @author    : Adarsh Pastakia\n * @version   : 5.0.0\n * @copyright : 2019\n * @license   : MIT\n */\nimport { UITreePanel } from \"./ui-tree-panel\";\n\nexport const DataPanels = [UITreePanel];\n"],"names":["tslib_1.__decorate"],"mappings":"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"}